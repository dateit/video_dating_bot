// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ANONYMOUS
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id             String    @id @default(uuid())
  telegramId     String    @unique @db.VarChar(64)
  language       String    @default("en") @db.VarChar(64)
  username       String    @default("") @db.VarChar(128)
  videoNoteId    String?   @db.VarChar(128)
  surveyWasShown Boolean   @default(false)
  gender         Gender?
  lookingFor     Gender?
  age            Int?
  role           Role      @default(ANONYMOUS)
  Liker          Likes[]   @relation("LikerUser")
  Liked          Likes[]   @relation("LikedUser")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt

  @@unique(fields: [id, gender, lookingFor], name: "find_matches_users")
}

model Likes {
  id        String   @id @default(uuid())
  liker     User     @relation("LikerUser", fields: [likerId], references: [id])
  liked     User     @relation("LikedUser", fields: [likedId], references: [id])
  mutual    Boolean  @default(false)
  dislike   Boolean  @default(false)
  likedId   String
  likerId   String
  createdAt DateTime @default(now())


  @@unique([likedId, likerId])
  @@index([likedId])
  @@index([likerId])
  @@index([likedId, dislike], name: "find_disliked_liked")
  @@index([likedId, mutual], name: "find_mutual_liked")
  @@index([likerId, mutual], name: "find_mutual_liker")
}

model Session {
  id   String @id @default(uuid())
  data String
}
